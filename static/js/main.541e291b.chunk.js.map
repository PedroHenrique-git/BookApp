{"version":3,"sources":["images/background.jpg","style/GlobalStyles.tsx","style/colors.ts","pages/Index/style.tsx","components/TypeLink/style.tsx","components/TypeLink/TypeLink.tsx","images/icons-types/normal.svg","images/icons-types/darkness.svg","images/icons-types/dragon.svg","images/icons-types/fairy.svg","images/icons-types/fighting.svg","images/icons-types/fire.svg","images/icons-types/grass.svg","images/icons-types/lightning.svg","images/icons-types/metal.svg","images/icons-types/psychic.svg","images/icons-types/water.svg","components/Background/style.tsx","pages/Index/Index.tsx","pages/CardsPage/style.tsx","services/api.ts","components/Loading/style.tsx","images/loading.gif","components/Loading/Loading.tsx","components/Error/style.tsx","components/Error/Error.tsx","pages/CardsPage/CardsPage.tsx","pages/CardPage/style.tsx","pages/CardPage/CardPage.tsx","components/Page404/style.tsx","components/Page404/Page404.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","background","color1","color2","color3","color4","MainContainer","styled","main","colors","TypeCard","div","props","type","TypeLink","img","to","src","alt","BackgroundContainer","Index","useState","name","setName","redirect","setRedirect","className","onSubmit","e","preventDefault","handleSubmit","onChange","target","value","placeholder","id","autoComplete","colorless","darkness","dragon","fairy","fighting","fire","grass","lightning","metal","psychic","water","CardWrap","baseUrl","fetcher","url","apiKey","fetch","method","headers","Headers","then","resp","json","LoadingContainer","Loading","loadingGif","ErrorContainer","Error","CardsPage","page","setPage","useParams","useSWR","process","pokemonData","data","error","isLoading","isError","getCardsData","toUpperCase","slice","map","pokemon","images","small","onClick","disabled","Math","ceil","totalCount","MainCardContainer","CardPage","getCardData","history","useHistory","goBack","large","supertype","subtypes","subtype","hp","types","evolvesTo","evolves","attacks","attack","text","cost","damage","convertedEnergyCost","weaknesses","weaknesse","Page404Contaier","Page404","Routes","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.541e291b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.55e74a7f.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport background from '../images/background.jpg';\n\nexport const GlobalStyles = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        font-family: 'Roboto Slab', serif;\n    }\n\n    html {\n        background: url(${background}) no-repeat center center fixed;\n        -webkit-background-size: cover;\n        -moz-background-size: cover;\n        -o-background-size: cover;\n        background-size: cover;\n    }\n\n    html, body {\n        width: 100%;\n    }\n`;\n","export const color1 = '#ffffff';\nexport const color2 = '#f2a626';\nexport const color3 = '#2b2e2d';\nexport const color4 = '#181817';\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\nexport const MainContainer = styled.main`\n    max-width: 1200px;\n    padding: 0 25px;\n    margin: 80px auto 0 auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media (max-width: 640px) {\n        margin: 20px auto 0 auto;\n    }\n\n    .conteudo {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n\n        .conteudo_title {\n            h1 {\n                color: ${colors.color1};\n                font-size: 2.1em;\n                font-weight: 100;\n                text-align: center;\n            }\n        }\n\n        .types_link-wrap {\n            margin-top: 30px;\n            display: flex;\n            justify-content: center;\n            flex-wrap: wrap;\n        }\n\n        form {\n            margin-top: 20px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            input {\n                color: ${colors.color3};\n                padding: 10px;\n                border-radius: 10px;\n                border: none;\n                outline: none;\n                font-size: 1.4em;\n                margin-right: 15px;\n\n                @media (max-width: 640px) {\n                    width: 200px;\n                }\n            }\n\n            button {\n                border-radius: 5px;\n                background: ${colors.color2};\n                border: none;\n                color: ${colors.color3};\n                outline: none;\n                cursor: pointer;\n                padding: 10px;\n                font-size: 1.4em;\n            }\n        }\n    }\n`;\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\ntype typeString = {\n    type: string;\n};\n\nexport const TypeCard = styled.div<typeString>`\n    position: relative;\n    height: 200px;\n    width: 200px;\n\n    @media (max-width: 640px) {\n        height: 100px;\n        width: 100px;\n    }\n\n    &:hover:after {\n        background: rgba(0, 0, 0, 0.8);\n        border-radius: 5px;\n        content: '${(props: typeString) => props.type}';\n        color: ${colors.color1};\n        padding: 10px;\n        font-size: 1.1em;\n        text-transform: uppercase;\n\n        position: absolute;\n        bottom: 200px;\n        right: 0;\n    }\n\n    a {\n        display: flex;\n        height: 100%;\n        width: 100%;\n    }\n`;\n","import { Link } from 'react-router-dom';\nimport { TypeCard } from './style';\n\nexport default function TypeLink({\n    type,\n    img,\n}: {\n    type: string;\n    img: string;\n}): JSX.Element {\n    return (\n        <TypeCard type={type}>\n            <Link to={`/cards/${type}`}>\n                <img src={img} alt={type} />\n            </Link>\n        </TypeCard>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/normal.461bd737.svg\";","export default __webpack_public_path__ + \"static/media/darkness.e139e037.svg\";","export default __webpack_public_path__ + \"static/media/dragon.50f986be.svg\";","export default __webpack_public_path__ + \"static/media/fairy.8b663435.svg\";","export default __webpack_public_path__ + \"static/media/fighting.8ec17be2.svg\";","export default __webpack_public_path__ + \"static/media/fire.b81b69f3.svg\";","export default __webpack_public_path__ + \"static/media/grass.bdc5b553.svg\";","export default __webpack_public_path__ + \"static/media/lightning.5b9316bb.svg\";","export default __webpack_public_path__ + \"static/media/metal.08f9721f.svg\";","export default __webpack_public_path__ + \"static/media/psychic.1ff2b9e2.svg\";","export default __webpack_public_path__ + \"static/media/water.2e85de33.svg\";","import styled from 'styled-components';\n\nexport const BackgroundContainer = styled.div`\n    background: rgba(0, 0, 0, 0.6);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: -1;\n`;\n","import { FormEvent, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { MainContainer } from './style';\nimport TypeLink from '../../components/TypeLink/TypeLink';\nimport colorless from '../../images/icons-types/normal.svg';\nimport darkness from '../../images/icons-types/darkness.svg';\nimport dragon from '../../images/icons-types/dragon.svg';\nimport fairy from '../../images/icons-types/fairy.svg';\nimport fighting from '../../images/icons-types/fighting.svg';\nimport fire from '../../images/icons-types/fire.svg';\nimport grass from '../../images/icons-types/grass.svg';\nimport lightning from '../../images/icons-types/lightning.svg';\nimport metal from '../../images/icons-types/metal.svg';\nimport psychic from '../../images/icons-types/psychic.svg';\nimport water from '../../images/icons-types/water.svg';\nimport { BackgroundContainer } from '../../components/Background/style';\n\nexport default function Index(): JSX.Element {\n    const [name, setName] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        setRedirect(true);\n    };\n\n    if (redirect) return <Redirect to={`/cards/searched/${name}`} />;\n\n    return (\n        <MainContainer>\n            <BackgroundContainer />\n            <section className=\"conteudo\">\n                <div className=\"conteudo_title\">\n                    <h1>Select the type of pokemon</h1>\n                    <h1>or</h1>\n                </div>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <input\n                        onChange={(e) => setName(e.target.value)}\n                        placeholder=\"Pokemon name\"\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"name\"\n                        autoComplete=\"off\"\n                    />\n                    <button type=\"submit\">search</button>\n                </form>\n                <div className=\"types_link-wrap\">\n                    <TypeLink img={colorless} type=\"colorless\" />\n                    <TypeLink img={darkness} type=\"darkness\" />\n                    <TypeLink img={dragon} type=\"dragon\" />\n                    <TypeLink img={fairy} type=\"fairy\" />\n                    <TypeLink img={fighting} type=\"fighting\" />\n                    <TypeLink img={fire} type=\"fire\" />\n                    <TypeLink img={grass} type=\"grass\" />\n                    <TypeLink img={lightning} type=\"lightning\" />\n                    <TypeLink img={metal} type=\"metal\" />\n                    <TypeLink img={psychic} type=\"psychic\" />\n                    <TypeLink img={water} type=\"water\" />\n                </div>\n            </section>\n        </MainContainer>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\nexport const CardWrap = styled.main`\n    max-width: 1700px;\n    padding: 0 25px;\n    margin: 80px auto 80px auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    .title {\n        margin-bottom: 30px;\n\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        @media (max-width: 640px) {\n            flex-direction: column;\n        }\n\n        a {\n            margin-right: 20px;\n            border-radius: 5px;\n            background: ${colors.color2};\n            border: none;\n            color: ${colors.color3};\n            outline: none;\n            cursor: pointer;\n            padding: 5px;\n            font-size: 1.2em;\n            text-decoration: none;\n\n            @media (max-width: 640px) {\n                margin-right: 0px;\n            }\n        }\n\n        h1 {\n            color: ${colors.color1};\n            font-size: 2.6em;\n            font-weight: 100;\n            text-align: center;\n        }\n    }\n\n    .cards_wrap {\n        display: flex;\n        gap: 20px;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        width: 100%;\n\n        li {\n            list-style: none;\n            cursor: pointer;\n\n            &:hover {\n                transform: scale(1.3);\n                transition: all 0.2s ease;\n            }\n        }\n    }\n\n    .page_control-wrap {\n        margin-top: 30px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        button {\n            border-radius: 5px;\n            background: ${colors.color2};\n            border: none;\n            color: ${colors.color3};\n            outline: none;\n            cursor: pointer;\n            padding: 15px;\n            font-size: 1.6em;\n\n            &:first-of-type {\n                margin-right: 20px;\n            }\n        }\n    }\n`;\n","import useSWR from 'swr';\nimport { IPokemon, IPokemonCard } from '../interfaces/IPokemon';\n\nexport const baseUrl = 'https://api.pokemontcg.io/v2';\nexport const pokemonPerPage = 30;\n\nconst fetcher = (url: string, apiKey: string): Promise<any> =>\n    fetch(url, {\n        method: 'get',\n        headers: new Headers({\n            'X-API-KEY': apiKey,\n        }),\n    }).then((resp) => resp.json());\n\nexport function getCardsData(\n    page: number,\n    type?: string,\n    name?: string\n): IPokemon {\n    let url = '';\n\n    if (name) {\n        url = `${baseUrl}/cards?q=name:${name}&page=${page}&pageSize=${pokemonPerPage}`;\n    } else {\n        url = `${baseUrl}/cards?q=types:${type}&page=${page}&pageSize=${pokemonPerPage}`;\n    }\n\n    const { data: pokemonData, error } = useSWR(\n        [url, process.env.REACT_APP_API_KEY],\n        fetcher\n    );\n\n    return {\n        pokemonData,\n        isLoading: !pokemonData && !error,\n        isError: error,\n    };\n}\n\nexport function getCardData(id: string): IPokemonCard {\n    const { data: pokemonData, error } = useSWR(\n        [`${baseUrl}/cards/${id}`, process.env.REACT_APP_API_KEY],\n        fetcher\n    );\n\n    return {\n        pokemonData,\n        isLoading: !pokemonData && !error,\n        isError: error,\n    };\n}\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\nexport const LoadingContainer = styled.div`\n    background: ${colors.color4};\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    img {\n        height: auto;\n        width: 300px;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/loading.e834de00.gif\";","import { LoadingContainer } from './style';\nimport loadingGif from '../../images/loading.gif';\n\nexport default function Loading(): JSX.Element {\n    return (\n        <LoadingContainer>\n            <img src={loadingGif} alt=\"loading gif\" />\n        </LoadingContainer>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\nexport const ErrorContainer = styled.div`\n    background: ${colors.color4};\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    h1 {\n        color: ${colors.color1};\n    }\n\n    a {\n        border-radius: 5px;\n        background: ${colors.color2};\n        border: none;\n        color: ${colors.color3};\n        outline: none;\n        cursor: pointer;\n        padding: 5px;\n        font-size: 1.2em;\n        text-decoration: none;\n    }\n`;\n","import { Link } from 'react-router-dom';\nimport { ErrorContainer } from './style';\n\nexport default function Error(): JSX.Element {\n    return (\n        <ErrorContainer>\n            <h1>Error</h1>\n            <Link to=\"/\">return to home</Link>\n        </ErrorContainer>\n    );\n}\n","import { Link, Redirect, useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { CardWrap } from './style';\nimport { BackgroundContainer } from '../../components/Background/style';\nimport { getCardsData, pokemonPerPage } from '../../services/api';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\n\nexport default function CardsPage(): JSX.Element {\n    const [page, setPage] = useState(1);\n    const { type, name } = useParams<{ type?: string; name?: string }>();\n    const { pokemonData, isLoading, isError } = getCardsData(page, type, name);\n\n    if (isLoading) return <Loading />;\n\n    if (isError) return <Error />;\n\n    if (!pokemonData.data) return <Redirect to=\"/\" />;\n\n    return (\n        <CardWrap>\n            <BackgroundContainer />\n            <div className=\"title\">\n                <Link to=\"/\">Go to home</Link>\n                <h1>\n                    {type ? type[0].toUpperCase() + type.slice(1) : name} cards\n                </h1>\n            </div>\n            <ul className=\"cards_wrap\">\n                {pokemonData.data.map((pokemon) => (\n                    <Link to={`/card/${pokemon.id}`}>\n                        <li>\n                            <img src={pokemon.images.small} alt={pokemon.id} />\n                        </li>\n                    </Link>\n                ))}\n            </ul>\n            <div className=\"page_control-wrap\">\n                <button\n                    type=\"button\"\n                    onClick={() => setPage(page + 1)}\n                    disabled={\n                        page ===\n                        Math.ceil(pokemonData.totalCount / pokemonPerPage)\n                    }\n                >\n                    next page\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => setPage(page - 1)}\n                    disabled={page === 1}\n                >\n                    prev page\n                </button>\n            </div>\n        </CardWrap>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\nexport const MainCardContainer = styled.main`\n    max-width: 1700px;\n    padding: 0 25px;\n    margin: 80px auto 80px auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    .title {\n        margin-bottom: 30px;\n\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        @media (max-width: 640px) {\n            flex-direction: column;\n        }\n\n        button {\n            margin-right: 20px;\n            border-radius: 5px;\n            background: ${colors.color2};\n            border: none;\n            color: ${colors.color3};\n            outline: none;\n            cursor: pointer;\n            padding: 5px;\n            font-size: 1.2em;\n            text-decoration: none;\n\n            @media (max-width: 640px) {\n                margin-right: 0px;\n            }\n        }\n\n        h1 {\n            color: ${colors.color1};\n            font-size: 2.6em;\n            font-weight: 100;\n            text-align: center;\n        }\n    }\n\n    .card_conteudo {\n        display: flex;\n        justify-content: space-evenly;\n        width: 100%;\n\n        @media (max-width: 1400px) {\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n        }\n\n        .card_image {\n            @media (max-width: 1400px) {\n                margin-bottom: 80px;\n            }\n\n            img {\n                height: auto;\n                width: 500px;\n\n                @media (max-width: 640px) {\n                    width: 300px;\n                }\n            }\n        }\n\n        .card_info {\n            max-height: 700px;\n            max-width: 800px;\n            overflow-y: auto;\n\n            &::-webkit-scrollbar {\n                width: 10px;\n            }\n\n            &::-webkit-scrollbar-track {\n                background: #f1f1f1;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background: ${colors.color2};\n            }\n\n            li {\n                display: flex;\n                align-items: center;\n                justify-content: flex-start;\n                list-style: none;\n                margin-top: 25px;\n\n                &:first-of-type {\n                    margin-top: 0;\n                }\n\n                &.attacks {\n                    align-items: flex-start;\n                    flex-direction: column;\n\n                    .attack {\n                        margin-top: 20px;\n\n                        h3 {\n                            color: ${colors.color2};\n                            text-transform: uppercase;\n                            font-weight: 100;\n                            font-size: 1.2em;\n                            margin-right: 20px;\n                        }\n                    }\n                }\n\n                &.weaknesses {\n                    .weaknesse {\n                        display: flex;\n\n                        h3 {\n                            color: ${colors.color2};\n                            text-transform: uppercase;\n                            font-weight: 100;\n                            font-size: 1.2em;\n                            margin-right: 20px;\n                        }\n                    }\n                }\n\n                h2 {\n                    background: ${colors.color2};\n                    border-radius: 5px;\n                    color: ${colors.color3};\n                    text-transform: uppercase;\n                    font-weight: 100;\n                    font-size: 1.2em;\n                    margin-right: 20px;\n                    padding: 5px;\n                }\n\n                p {\n                    color: ${colors.color1};\n                    font-weight: 100;\n                    font-size: 1.2em;\n                }\n            }\n        }\n    }\n`;\n","import { useParams, useHistory } from 'react-router-dom';\nimport { BackgroundContainer } from '../../components/Background/style';\nimport { MainCardContainer } from './style';\nimport { getCardData } from '../../services/api';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\n\nexport default function CardPage(): JSX.Element {\n    const { id } = useParams<{ id: string }>();\n    const { pokemonData, isError, isLoading } = getCardData(id);\n    const history = useHistory();\n\n    if (isLoading) return <Loading />;\n\n    if (isError) return <Error />;\n\n    return (\n        <MainCardContainer>\n            <BackgroundContainer />\n            <div className=\"title\">\n                <button type=\"button\" onClick={() => history.goBack()}>\n                    back\n                </button>\n                <h1>{pokemonData.data.name}</h1>\n            </div>\n            <section className=\"card_conteudo\">\n                <div className=\"card_image\">\n                    <img\n                        src={pokemonData.data.images.large}\n                        alt={pokemonData.data.id}\n                    />\n                </div>\n                <ul className=\"card_info\">\n                    <li>\n                        <h2>Supertype</h2>\n                        <p> {pokemonData.data.supertype}</p>\n                    </li>\n                    <li>\n                        <h2>Subtypes</h2>\n                        {pokemonData.data.subtypes.map((subtype) => (\n                            <p> {subtype}</p>\n                        ))}\n                    </li>\n                    <li>\n                        <h2>Hp</h2>\n                        <p>{pokemonData.data.hp}</p>\n                    </li>\n                    <li>\n                        <h2>Types</h2>\n                        {pokemonData.data.types.map((type) => (\n                            <p> {type}</p>\n                        ))}\n                    </li>\n                    <li>\n                        <h2>Evolves to</h2>\n                        {pokemonData.data.evolvesTo ? (\n                            pokemonData.data.evolvesTo.map((evolves) => (\n                                <p> {evolves}</p>\n                            ))\n                        ) : (\n                            <p>none</p>\n                        )}\n                    </li>\n                    <li className=\"attacks\">\n                        <h2>Attacks</h2>\n                        {pokemonData.data.attacks.map((attack) => (\n                            <div className=\"attack\">\n                                <h3>{attack.name}</h3>\n                                <p>{attack.text}</p>\n                                <p>{attack.cost}</p>\n                                <p>{attack.damage}</p>\n                                <p>{attack.convertedEnergyCost}</p>\n                            </div>\n                        ))}\n                    </li>\n                    <li className=\"weaknesses\">\n                        <h2>Weaknesses</h2>\n                        {pokemonData.data.weaknesses ? (\n                            pokemonData.data.weaknesses.map((weaknesse) => (\n                                <div className=\"weaknesse\">\n                                    <h3>{weaknesse.type}</h3>\n                                    <p>{weaknesse.value}</p>\n                                </div>\n                            ))\n                        ) : (\n                            <p>none</p>\n                        )}\n                    </li>\n                </ul>\n            </section>\n        </MainCardContainer>\n    );\n}\n","import styled from 'styled-components';\nimport * as colors from '../../style/colors';\n\nexport const Page404Contaier = styled.div`\n    background: ${colors.color4};\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    h1 {\n        color: ${colors.color1};\n    }\n\n    a {\n        border-radius: 5px;\n        background: ${colors.color2};\n        border: none;\n        color: ${colors.color3};\n        outline: none;\n        cursor: pointer;\n        padding: 5px;\n        font-size: 1.2em;\n        text-decoration: none;\n    }\n`;\n","import { Link } from 'react-router-dom';\nimport { Page404Contaier } from './style';\n\nexport default function Page404(): JSX.Element {\n    return (\n        <Page404Contaier>\n            <h1>404</h1>\n            <Link to=\"/\">return to home</Link>\n        </Page404Contaier>\n    );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport Index from '../pages/Index/Index';\nimport CardsPage from '../pages/CardsPage/CardsPage';\nimport CardPage from '../pages/CardPage/CardPage';\nimport Page404 from '../components/Page404/Page404';\n\nexport default function Routes(): JSX.Element {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Index} />\n            <Route exact path=\"/cards/:type?\" component={CardsPage} />\n            <Route exact path=\"/cards/searched/:name?\" component={CardsPage} />\n            <Route exact path=\"/card/:id\" component={CardPage} />\n            <Route exact path=\"*\" component={Page404} />\n        </Switch>\n    );\n}\n","import { HashRouter } from 'react-router-dom';\nimport { GlobalStyles } from './style/GlobalStyles';\nimport Routes from './routes/Routes';\n\nexport default function App(): JSX.Element {\n    return (\n        <HashRouter>\n            <GlobalStyles />\n            <Routes />\n        </HashRouter>\n    );\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}